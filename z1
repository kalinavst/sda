/*За първото контролно професор ЧЧ е решил да разположи всички участници в една редица един зад друг. Всеки участник е получил един вариант на контролното. За жалост един участник, Коцето, е закъснял. ЧЧ има точно един останал вариант на контролното и се чуди къде да разпожи Коцето, така че да е най-далеч от останалите участници със същия вариант. За да помогнете на ЧЧ трябва за всеки участник да кажете какво е най-малкото разстояние от него до най-близкия участник с варианта на Коцето.

Input Format

За улеснение вариантите ще са малки букви от латинската азбука.

На първият ред ще получите 1 дума представляваща последователност от вариантите на всички участници един след друг. Думата ще има  на брой символа.

На втория ред ще получите един символ - варианта, който е останал за Коцето.

Constraints


Output Format

На един ред изведете разделени с празно място (спейс) разстоянията на всеки един участник до най-близкия вариант, който получава Коцето. Резултата трябва да е в същата наредба, в която са зададени участниците на входа.

Sample Input 0

abaaa
b
Sample Output 0

1 0 1 2 3
Explanation 0

На входа сме получили 2 различни варианта -  и . Като първият участник има вариант , вторият - вариант  и тн. Интересуваме се на какво разстояние е всеки участник от някой с вариант .

Участниците с вариант  са на рзстояние  от участници с вариант .

Участниците непосредствено от ляво и от дясно (отпред и отзад) на участника с вариант  са на разстояние  и тн.

Най-десния участник (последното ) е на разстояние 3 от участника с ваирант .

Коментар: Следователно, ЧЧ ще избере да сложи Коцето най-дясно на редицата. ВАЖНО!!! - Това не е необходимо да го съобразявате вие, единствено е необходимо да изчислите кой на какво разстояние е от участник с варианта, който Коцето има.

Sample Input 1

abaaabcdc
b
Sample Output 1

1 0 1 2 1 0 1 2 3
Explanation 1

Този път имаме двама участници с вариант  и съответно те са на разстояние . Тримата участници с вариант  един до друг са между два варианта  и следователно имат стойности .*/


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
   string red;
    char koce;
    int dist = 0;
cin>>red;
    cin>>koce;
    int i=0;
    
    while(red[i]!=koce&&i<red.size()){
        i++;
        dist++;     
    }
    for(int n=dist;n>0;n--){
        cout<<n<<" ";
    }
    dist=0;
    for(; i < red.size(); ++i)
    {
        if (red[i] == koce)
        {
            if(dist==0)
            {
                cout<<0<<" ";
                continue;
            }

            if (dist > 1)
            {
                for (int k = 1; k <= dist; ++k)
                {
                    if (k <= (dist + 1) / 2)
                    {
                        cout << k << " ";
                    }
                    else
                    {
                        cout << dist - k + 1 << " ";
                    }
                }
            }
            else
            {
                cout << 1 << " ";
            }
            dist = 0;
            cout << 0 << " ";


        }
        else
        {
            dist++;

        }
    }
    if (dist != 0)
    {
        for (int i = 1; i <= dist; i++)
            cout << i << " ";
    }
       
    return 0;
}
