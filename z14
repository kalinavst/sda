Дадени са n числа , които се интерпретират като битови маски. Зоро харесва дадена маска, ако тя е подмаска на поне една от маските . Да се определи броят на маските, които Зоро харесва.

Пояснение:

Числото 3 отговаря на битова маска 011 и нейни подмаски са 000, 001, 010, 011

Маска  е подмаска на , ако за всеки изключен бит в , битът на същата позиция в  също е изключен. Позициите, на които има включени битове в , могат да бъдат както включени, така и изключени в .

Input Format

На първия ред на стандартния вход е зададено числото .

На втория ред са зададени числата , разделени с по един интервал.

Constraints



Output Format

На един ред да се изведе броят на хубавите маски.

Sample Input 0

2
6 3
Sample Output 0

6
Explanation 0

6 отговаря на маска 110 и нейни подмаски са 000, 100, 010, 110.

3 отговаря на маска 011 и нейни подмаски са 000, 001, 010, 011.

Окончателно, отговорът е 6 маски: 000, 001, 010, 011, 100, 110.








#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<iostream>
using namespace std;

int main()
{
    int n;
    cin>>n;
    vector<int> arr;
    int help;
    for(int i=0;i<n;i++)
    {
        cin>>help;
        arr.push_back(help);
    }
    int maks=arr[0];
    for(int i=1;i<n;i++)
    {
        if(arr[i]>maks)
            maks=arr[i];
    }
    int br=0;
    for(int i=0;i<=maks;i++)
    {
        for(int j=0;j<n;j++)
        {
            if((arr[j] | i)==arr[j])
            {
                br++;
                break;
            }
        }
    }
    cout<<br<<endl;

    return 0;
}


  
